BAK_MYSQL_DATABASE_ENABLED=0
BAK_POSTGRESQL_DATABASE_ENABLED=1

POSTGRESQL_BIN=/usr/bin/psql
POSTGRESQL_DUMP_BIN=/usr/bin/pg_dump
POSTGRESQL_HOST=localhost
POSTGRESQL_USER=postgres
POSTGRESQL_PASS=password
POSTGRESQL_CHECK_CMD="_postgresql_check"

BAK_POSTGRESQL_DATABASE_LIST_CMD="LANG=C PGPASSWORD=$POSTGRESQL_PASS $POSTGRESQL_BIN -h $POSTGRESQL_HOST -U $POSTGRESQL_USER --list -t -A -x postgres | grep Name | cut -d'|' -f 2"
BAK_POSTGRESQL_DATABASE_BACKUP_CMD="_postgresql_dump"

_postgresql_dump() {
    local database=$1
    local error=0

    if [ -n "$database" ]; then
        $ECHO_BIN "    CMD : $POSTGRESQL_DUMP_BIN -h $POSTGRESQL_HOST -U $POSTGRESQL_USER -Fp $database" >> $BAK_OUTPUT_EXTENDED
        PGPASSWORD=$POSTGRESQL_PASS $POSTGRESQL_DUMP_BIN -h $POSTGRESQL_HOST -U $POSTGRESQL_USER -Fp $database
        error=$?
    fi
    return $error
}

_postgresql_check() {
    local error=0

    $ECHO_BIN "    CMD: '$POSTGRESQL_BIN -h $POSTGRESQL_HOST -U $POSTGRESQL_USER -A -t -c 'show server_version' postgres'" >> $BAK_OUTPUT_EXTENDED
    PGPASSWORD=$POSTGRESQL_PASS $POSTGRESQL_BIN -h $POSTGRESQL_HOST -U $POSTGRESQL_USER -A -t -c 'show server_version' postgres
    error=$?
    return $error
}

BAK_POSTGRESQL_DATABASE_WARNING_IF_DOWN=0
BAK_POSTGRESQL_DATABASE_DATA_IF_DOWN=

BAK_POSTGRESQL_DATABASE_DIR=postgresql
BAK_POSTGRESQL_DATABASE_PATH=$BAK_DATA_PATH/$BAK_POSTGRESQL_DATABASE_DIR

BAK_POSTGRESQL_DATABASE_ALLOW_ALL=1
BAK_POSTGRESQL_DATABASE_ALLOW=("postgres")
BAK_POSTGRESQL_DATABASE_DISALLOW=("template0" "template1")
